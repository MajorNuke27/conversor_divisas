package conversor_divisas.view;

import conversor_divisas.model.Divisa;
import conversor_divisas.services.ConversionService;
import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Esau Montiel
 */
public class Principal extends javax.swing.JFrame {

    private ArrayList<Divisa> divisas;
    private ConversionService conversor;
    private int indexJcbBase;
    private int indexJcbObjetivo;
    private int x;
    private int y;
    
    /**
     * Creates new form Principal
     */
    private Principal() {
        this.indexJcbBase = 0;
        this.indexJcbObjetivo = 1;
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(27, 27, 30));
        this.jlbClose.setIcon(new ImageIcon("assets\\close.png"));
        this.jlbMin.setIcon(new ImageIcon("assets\\minimize.png"));
    }
    
    public Principal(ArrayList<Divisa> divisas, LocalDate fecha) {
        this();
        this.divisas = divisas;
        this.conversor = new ConversionService();
        this.jlbFecha.setText("Taza de cambio del dia: " + fecha.format(DateTimeFormatter.ofPattern("dd MMMM uuuu")));
        
        this.setComboBoxDivisas(divisas);
        this.jcbObjetivo.setSelectedIndex(1);
        
        this.jtbConversion.getTableHeader().setFont(new Font("Century Gothic", 0, 18));
        this.jtbConversion.setRowHeight(50);
        
        DefaultTableCellRenderer cellRender = new DefaultTableCellRenderer();
        cellRender.setHorizontalAlignment(SwingConstants.CENTER);

        this.jtbConversion.getColumnModel().getColumns().asIterator().forEachRemaining( column -> {
            column.setCellRenderer(cellRender);
        });
    }
    
    private void setComboBoxDivisas(ArrayList<Divisa> divisas) {
        divisas.forEach( divisa -> {
            this.jcbBase.addItem(divisa.toString());
            this.jcbObjetivo.addItem(divisa.toString());
        });
    }
    
    private void setTableHeader(String title, int columnIndex) {
        this.jtbConversion.getColumnModel().getColumn(columnIndex).setHeaderValue(title);
        this.jtbConversion.getTableHeader().repaint();
    }
    
    private void setLabelEquivalenciaBase (Divisa base, Divisa objetivo) {
        float conversion  = this.conversor.convertir(base, objetivo, 1);
        String roundedConversion = new DecimalFormat("0.00").format(conversion);
        String value = String.format("1.00 %s equivale a %s %s", base.toString(), roundedConversion, objetivo.toString());
        
        this.jlbConversion.setText(value);
    }
    
    private void verifyAutoConversion(){
        float cantidad = this.jtfCantidad.getText().equals("") ? 0 : Float.parseFloat(this.jtfCantidad.getText());
        if(cantidad > 0) this.jbtConvertir.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbBase = new javax.swing.JComboBox<>();
        jcbObjetivo = new javax.swing.JComboBox<>();
        jlbDivisa1 = new javax.swing.JLabel();
        jlbDivisa2 = new javax.swing.JLabel();
        jlbNombreCantidad = new javax.swing.JLabel();
        jlbFecha = new javax.swing.JLabel();
        jtfCantidad = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jlbClose = new javax.swing.JLabel();
        jlbMin = new javax.swing.JLabel();
        jbtConvertir = new javax.swing.JButton();
        jbtLimpiar = new javax.swing.JButton();
        jlbConversion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbConversion = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(500, 100), new java.awt.Dimension(500, 100), new java.awt.Dimension(500, 100));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 100), new java.awt.Dimension(50, 100), new java.awt.Dimension(50, 100));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 100), new java.awt.Dimension(50, 100), new java.awt.Dimension(50, 100));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(500, 100), new java.awt.Dimension(500, 100), new java.awt.Dimension(500, 100));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(900, 600));

        jcbBase.setBackground(new java.awt.Color(27, 27, 30));
        jcbBase.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jcbBase.setForeground(new java.awt.Color(240, 240, 240));
        jcbBase.setOpaque(true);
        jcbBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBaseActionPerformed(evt);
            }
        });

        jcbObjetivo.setBackground(new java.awt.Color(27, 27, 30));
        jcbObjetivo.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jcbObjetivo.setForeground(new java.awt.Color(240, 240, 240));
        jcbObjetivo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbObjetivo.setOpaque(true);
        jcbObjetivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbObjetivoActionPerformed(evt);
            }
        });

        jlbDivisa1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jlbDivisa1.setForeground(new java.awt.Color(240, 240, 240));
        jlbDivisa1.setText("Convertir de:");

        jlbDivisa2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jlbDivisa2.setForeground(new java.awt.Color(240, 240, 240));
        jlbDivisa2.setText("a:");

        jlbNombreCantidad.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jlbNombreCantidad.setForeground(new java.awt.Color(240, 240, 240));
        jlbNombreCantidad.setText("Ingrese la cantidad de Pesos mexicanos (MXN):");

        jlbFecha.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jlbFecha.setForeground(new java.awt.Color(240, 240, 240));
        jlbFecha.setText("Tasa de cambio del dia: 8 de Diciembre de 2022");

        jtfCantidad.setBackground(new java.awt.Color(27, 27, 30));
        jtfCantidad.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jtfCantidad.setForeground(new java.awt.Color(240, 240, 240));
        jtfCantidad.setToolTipText("");
        jtfCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCantidadKeyTyped(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(10, 151, 156));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jlbClose.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 16)); // NOI18N
        jlbClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbClose.setAlignmentX(0.5F);
        jlbClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbCloseMouseClicked(evt);
            }
        });

        jlbMin.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 16)); // NOI18N
        jlbMin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbMin.setAlignmentX(0.5F);
        jlbMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbMinMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbMin)
                .addGap(18, 18, 18)
                .addComponent(jlbClose)
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
            .addComponent(jlbClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jbtConvertir.setBackground(new java.awt.Color(10, 151, 156));
        jbtConvertir.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jbtConvertir.setForeground(new java.awt.Color(240, 240, 240));
        jbtConvertir.setText("Convertir");
        jbtConvertir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtConvertir.setOpaque(true);
        jbtConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtConvertirActionPerformed(evt);
            }
        });

        jbtLimpiar.setBackground(new java.awt.Color(81, 81, 89));
        jbtLimpiar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jbtLimpiar.setForeground(new java.awt.Color(240, 240, 240));
        jbtLimpiar.setText("Limpiar");
        jbtLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtLimpiar.setEnabled(false);
        jbtLimpiar.setOpaque(true);
        jbtLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLimpiarActionPerformed(evt);
            }
        });

        jlbConversion.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jlbConversion.setForeground(new java.awt.Color(240, 240, 240));
        jlbConversion.setText("1.00 Pesos Mexicanos equivalen a 10.00 Pesos argentinos");

        jtbConversion.setBackground(new java.awt.Color(27, 27, 30));
        jtbConversion.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jtbConversion.setForeground(new java.awt.Color(240, 240, 240));
        jtbConversion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"000.00$", "Equivalen a ---->", "000.00$"}
            },
            new String [] {
                "Pesos Mexicanos (MXN)", "", "Pesos Argentinos (ARS)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtbConversion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbConversion.setGridColor(new java.awt.Color(0, 0, 0));
        jtbConversion.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtbConversion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbDivisa1)
                                .addGap(18, 18, 18)
                                .addComponent(jcbBase, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlbDivisa2)
                                .addGap(18, 18, 18)
                                .addComponent(jcbObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(263, 263, 263)
                                        .addComponent(jbtConvertir)
                                        .addGap(103, 103, 103)
                                        .addComponent(jbtLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(237, 237, 237)
                                        .addComponent(jlbFecha)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jlbNombreCantidad)
                                .addGap(18, 18, 18)
                                .addComponent(jtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlbConversion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filler4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jlbFecha)
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbDivisa1)
                            .addComponent(jcbBase, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbDivisa2)
                            .addComponent(jcbObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbNombreCantidad)
                            .addComponent(jtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtConvertir)
                            .addComponent(jbtLimpiar))
                        .addGap(95, 95, 95)
                        .addComponent(jlbConversion)
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbObjetivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbObjetivoActionPerformed
        this.indexJcbObjetivo = this.jcbObjetivo.getSelectedIndex();
        
        Divisa divisaBase = this.divisas.get(this.indexJcbBase);
        Divisa divisaObjetivo = this.divisas.get(this.indexJcbObjetivo);
        
        this.setTableHeader(divisaObjetivo.toString(), 2);
        this.setLabelEquivalenciaBase(divisaBase, divisaObjetivo);
        this.verifyAutoConversion();
        
        this.jcbObjetivo.setToolTipText(divisaObjetivo.toString());
    }//GEN-LAST:event_jcbObjetivoActionPerformed

    private void jcbBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBaseActionPerformed
        this.indexJcbBase = this.jcbBase.getSelectedIndex();
        
        Divisa divisaBase = this.divisas.get(this.indexJcbBase);
        Divisa divisaObjetivo = this.divisas.get(this.indexJcbObjetivo);
        
        this.setTableHeader(divisaBase.toString(), 0);
        this.setLabelEquivalenciaBase(divisaBase, divisaObjetivo);
        this.verifyAutoConversion();
        
        this.jlbNombreCantidad.setText(String.format("Ingrese la cantidad de %s", divisaBase.toString()));
        this.jcbBase.setToolTipText(divisaBase.toString());
    }//GEN-LAST:event_jcbBaseActionPerformed

    private void jbtConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtConvertirActionPerformed
        float cantidad = this.jtfCantidad.getText().equals("") ? 0 : Float.parseFloat(this.jtfCantidad.getText());
        
        if(cantidad <= 0) {
            JOptionPane.showMessageDialog(null, "La cantidad ingresada debe ser mayor o igual a 1", "Cantidad invalida", JOptionPane.ERROR_MESSAGE);
            this.jtfCantidad.setText("");
            return;
        }
        
        float conversion  = this.conversor.convertir(this.divisas.get(this.indexJcbBase), this.divisas.get(this.indexJcbObjetivo), cantidad);
        
        String roundedConversion = new DecimalFormat("0.00").format(conversion);
        
        this.jtbConversion.setValueAt(cantidad + " $", 0, 0);
        this.jtbConversion.setValueAt(roundedConversion + " $", 0, 2);
    }//GEN-LAST:event_jbtConvertirActionPerformed

    private void jtfCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCantidadKeyTyped
        int key = evt.getKeyChar();
        String cantidad = this.jtfCantidad.getText();

        //Solo permite la entrda de numeros, punto y backspace
        if(!((key >= 48 && key <=57) || key == 46 || key == 8)) evt.consume();
        
        //Solo permite poner un punto
        if(this.jtfCantidad.getText().contains(".") && key == 46) evt.consume();
        
        //Limita la cantidad de decimales a 2
        if(cantidad.contains(".") && cantidad.substring(cantidad.indexOf('.'), cantidad.length()-1).length() == 2) evt.consume();
    }//GEN-LAST:event_jtfCantidadKeyTyped

    private void jbtLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLimpiarActionPerformed
        this.jtfCantidad.setText("");
        this.jtbConversion.setValueAt("000.00 $", 0, 0);
        this.jtbConversion.setValueAt("000.00 $", 0, 2);
        this.jbtLimpiar.setEnabled(false);
    }//GEN-LAST:event_jbtLimpiarActionPerformed

    private void jtfCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCantidadKeyReleased
        String cantidad = this.jtfCantidad.getText();
        
        if(cantidad.length() > 0) this.jbtLimpiar.setEnabled(true);
        else this.jbtLimpiar.setEnabled(false);
    }//GEN-LAST:event_jtfCantidadKeyReleased

    private void jlbCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jlbCloseMouseClicked

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        this.x = evt.getX();
        this.y = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jlbMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbMinMouseClicked
        this.setState(ICONIFIED);
    }//GEN-LAST:event_jlbMinMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtConvertir;
    private javax.swing.JButton jbtLimpiar;
    private javax.swing.JComboBox<String> jcbBase;
    private javax.swing.JComboBox<String> jcbObjetivo;
    private javax.swing.JLabel jlbClose;
    private javax.swing.JLabel jlbConversion;
    private javax.swing.JLabel jlbDivisa1;
    private javax.swing.JLabel jlbDivisa2;
    private javax.swing.JLabel jlbFecha;
    private javax.swing.JLabel jlbMin;
    private javax.swing.JLabel jlbNombreCantidad;
    private javax.swing.JTable jtbConversion;
    private javax.swing.JTextField jtfCantidad;
    // End of variables declaration//GEN-END:variables
}
